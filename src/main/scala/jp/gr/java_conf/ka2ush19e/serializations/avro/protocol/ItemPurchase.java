/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package jp.gr.java_conf.ka2ush19e.serializations.avro.protocol;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ItemPurchase extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ItemPurchase\",\"namespace\":\"jp.gr.java_conf.ka2ush19e.serializations.avro.protocol\",\"fields\":[{\"name\":\"user\",\"type\":\"string\"},{\"name\":\"item\",\"type\":\"string\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"unit_price\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence user;
  @Deprecated public java.lang.CharSequence item;
  @Deprecated public int quantity;
  @Deprecated public int unit_price;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ItemPurchase() {}

  /**
   * All-args constructor.
   */
  public ItemPurchase(java.lang.CharSequence user, java.lang.CharSequence item, java.lang.Integer quantity, java.lang.Integer unit_price) {
    this.user = user;
    this.item = item;
    this.quantity = quantity;
    this.unit_price = unit_price;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return user;
    case 1: return item;
    case 2: return quantity;
    case 3: return unit_price;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: user = (java.lang.CharSequence)value$; break;
    case 1: item = (java.lang.CharSequence)value$; break;
    case 2: quantity = (java.lang.Integer)value$; break;
    case 3: unit_price = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'user' field.
   */
  public java.lang.CharSequence getUser() {
    return user;
  }

  /**
   * Sets the value of the 'user' field.
   * @param value the value to set.
   */
  public void setUser(java.lang.CharSequence value) {
    this.user = value;
  }

  /**
   * Gets the value of the 'item' field.
   */
  public java.lang.CharSequence getItem() {
    return item;
  }

  /**
   * Sets the value of the 'item' field.
   * @param value the value to set.
   */
  public void setItem(java.lang.CharSequence value) {
    this.item = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   */
  public java.lang.Integer getQuantity() {
    return quantity;
  }

  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.Integer value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'unit_price' field.
   */
  public java.lang.Integer getUnitPrice() {
    return unit_price;
  }

  /**
   * Sets the value of the 'unit_price' field.
   * @param value the value to set.
   */
  public void setUnitPrice(java.lang.Integer value) {
    this.unit_price = value;
  }

  /** Creates a new ItemPurchase RecordBuilder */
  public static jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder newBuilder() {
    return new jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder();
  }
  
  /** Creates a new ItemPurchase RecordBuilder by copying an existing Builder */
  public static jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder newBuilder(jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder other) {
    return new jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder(other);
  }
  
  /** Creates a new ItemPurchase RecordBuilder by copying an existing ItemPurchase instance */
  public static jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder newBuilder(jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase other) {
    return new jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder(other);
  }
  
  /**
   * RecordBuilder for ItemPurchase instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ItemPurchase>
    implements org.apache.avro.data.RecordBuilder<ItemPurchase> {

    private java.lang.CharSequence user;
    private java.lang.CharSequence item;
    private int quantity;
    private int unit_price;

    /** Creates a new Builder */
    private Builder() {
      super(jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.user)) {
        this.user = data().deepCopy(fields()[0].schema(), other.user);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.item)) {
        this.item = data().deepCopy(fields()[1].schema(), other.item);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.quantity)) {
        this.quantity = data().deepCopy(fields()[2].schema(), other.quantity);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.unit_price)) {
        this.unit_price = data().deepCopy(fields()[3].schema(), other.unit_price);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ItemPurchase instance */
    private Builder(jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase other) {
            super(jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.SCHEMA$);
      if (isValidValue(fields()[0], other.user)) {
        this.user = data().deepCopy(fields()[0].schema(), other.user);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.item)) {
        this.item = data().deepCopy(fields()[1].schema(), other.item);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.quantity)) {
        this.quantity = data().deepCopy(fields()[2].schema(), other.quantity);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.unit_price)) {
        this.unit_price = data().deepCopy(fields()[3].schema(), other.unit_price);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'user' field */
    public java.lang.CharSequence getUser() {
      return user;
    }
    
    /** Sets the value of the 'user' field */
    public jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder setUser(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.user = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'user' field has been set */
    public boolean hasUser() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'user' field */
    public jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder clearUser() {
      user = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'item' field */
    public java.lang.CharSequence getItem() {
      return item;
    }
    
    /** Sets the value of the 'item' field */
    public jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder setItem(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.item = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'item' field has been set */
    public boolean hasItem() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'item' field */
    public jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder clearItem() {
      item = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'quantity' field */
    public java.lang.Integer getQuantity() {
      return quantity;
    }
    
    /** Sets the value of the 'quantity' field */
    public jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder setQuantity(int value) {
      validate(fields()[2], value);
      this.quantity = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'quantity' field has been set */
    public boolean hasQuantity() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'quantity' field */
    public jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder clearQuantity() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'unit_price' field */
    public java.lang.Integer getUnitPrice() {
      return unit_price;
    }
    
    /** Sets the value of the 'unit_price' field */
    public jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder setUnitPrice(int value) {
      validate(fields()[3], value);
      this.unit_price = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'unit_price' field has been set */
    public boolean hasUnitPrice() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'unit_price' field */
    public jp.gr.java_conf.ka2ush19e.serializations.avro.protocol.ItemPurchase.Builder clearUnitPrice() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public ItemPurchase build() {
      try {
        ItemPurchase record = new ItemPurchase();
        record.user = fieldSetFlags()[0] ? this.user : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.item = fieldSetFlags()[1] ? this.item : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.quantity = fieldSetFlags()[2] ? this.quantity : (java.lang.Integer) defaultValue(fields()[2]);
        record.unit_price = fieldSetFlags()[3] ? this.unit_price : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
